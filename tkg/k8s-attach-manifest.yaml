apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: extension-manager
    tmc-extension: "true"
    controller-tools.k8s.io: "1.0"
  name: vmware-system-tmc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stack-config
  namespace: vmware-system-tmc
  labels:
    tmc.cloud.vmware.com/managed: "true"
data:
  resource_uid: "c:01F8YJX73RBN0XNVGDWZANAS2M"
  org_id: "fea0ee4b-bbf6-4444-b1d6-e493597d46a4"
  management_cluster_name: "attached"
  provisioner_name: "attached"
  cluster_name: "gifted-hoover5"
  cluster_rid: "rid:c:fea0ee4b-bbf6-4444-b1d6-e493597d46a4:attached:attached:gifted-hoover5"
  tmc_url: https://tanzuemea.tmc.cloud.vmware.com
  tmc_host: tanzuemea.tmc.cloud.vmware.com
  tls.crt: |+
    -----BEGIN CERTIFICATE-----
    MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
    WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
    RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
    R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
    sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
    NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
    Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
    /kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
    AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
    Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
    FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
    AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
    Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
    gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
    PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
    ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
    CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
    lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
    avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
    yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
    yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
    hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
    HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
    MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
    nLRbwHOoq7hHwg==
    -----END CERTIFICATE-----
---
apiVersion: v1
kind: Secret
metadata:
  name: tmc-access-secret
  namespace: vmware-system-tmc
  labels:
    tmc.cloud.vmware.com/managed: "true"
type: Opaque
data:
 access_token_info : "ZXlKaFkyTmxjM05mZEc5clpXNGlPaUoyTVdGblpXNTBMa3BDY0ZRdFJHVkxWRXhETjJObGMydFpTbDlwYXkxQ1JWRllRazAyU205M1pGcGxXV05rZERac2NIRlpkVmxyT1dwWE1WRkhNMFZ1V0V0bGIxVTBlaklpZlE9PQ=="
---
---
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200617211605-651903477185
    tmc.cloud.vmware.com/do-not-delete: "true"
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: agents.clusters.tmc.cloud.vmware.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.status
    name: Status
    type: integer
  - JSONPath: .status.health
    name: Health
    type: integer
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: Agent
    listKind: AgentList
    plural: agents
    singular: agent
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Agent is the Schema for the agents API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: AgentSpec defines the desired state of Agent
          properties:
            detach:
              type: boolean
            extensions:
              items:
                type: string
              type: array
            namespace:
              type: string
          type: object
        status:
          description: AgentStatus defines the observed state of Agent
          properties:
            clusterHealth:
              description: AggregatedClusterHealth defines the observed state of the
                cluster.
              properties:
                controllerManagerHealth:
                  description: ComponentHealth defines the health of a component.
                  properties:
                    health:
                      format: int32
                      type: integer
                    message:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                etcdHealth:
                  items:
                    description: ComponentHealth defines the health of a component.
                    properties:
                      health:
                        format: int32
                        type: integer
                      message:
                        type: string
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                message:
                  type: string
                schedulerHealth:
                  description: ComponentHealth defines the health of a component.
                  properties:
                    health:
                      format: int32
                      type: integer
                    message:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                timestamp:
                  description: "A Timestamp represents a point in time independent
                    of any time zone or calendar, represented as seconds and fractions
                    of seconds at nanosecond resolution in UTC Epoch time. It is encoded
                    using the Proleptic Gregorian Calendar which extends the Gregorian
                    calendar backwards to year one. It is encoded assuming all minutes
                    are 60 seconds long, i.e. leap seconds are \"smeared\" so that
                    no leap second table is needed for interpretation. Range is from
                    0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting
                    to that range, we ensure that we can convert to and from  RFC
                    3339 date strings. See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).
                    \n # Examples \n Example 1: Compute Timestamp from POSIX `time()`.
                    \n     Timestamp timestamp;     timestamp.set_seconds(time(NULL));
                    \    timestamp.set_nanos(0); \n Example 2: Compute Timestamp from
                    POSIX `gettimeofday()`. \n     struct timeval tv;     gettimeofday(&tv,
                    NULL); \n     Timestamp timestamp;     timestamp.set_seconds(tv.tv_sec);
                    \    timestamp.set_nanos(tv.tv_usec * 1000); \n Example 3: Compute
                    Timestamp from Win32 `GetSystemTimeAsFileTime()`. \n     FILETIME
                    ft;     GetSystemTimeAsFileTime(&ft);     UINT64 ticks = (((UINT64)ft.dwHighDateTime)
                    << 32) | ft.dwLowDateTime; \n     // A Windows tick is 100 nanoseconds.
                    Windows epoch 1601-01-01T00:00:00Z     // is 11644473600 seconds
                    before Unix epoch 1970-01-01T00:00:00Z.     Timestamp timestamp;
                    \    timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
                    \    timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));
                    \n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.
                    \n     long millis = System.currentTimeMillis(); \n     Timestamp
                    timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)         .setNanos((int)
                    ((millis % 1000) * 1000000)).build(); \n Example 5: Compute Timestamp
                    from current time in Python. \n     timestamp = Timestamp()     timestamp.GetCurrentTime()
                    \n # JSON Mapping \n In JSON format, the Timestamp type is encoded
                    as a string in the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
                    format. That is, the format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"
                    where {year} is always expressed using four digits while {month},
                    {day}, {hour}, {min}, and {sec} are zero-padded to two digits
                    each. The fractional seconds, which can go up to 9 digits (i.e.
                    up to 1 nanosecond resolution), are optional. The \"Z\" suffix
                    indicates the timezone (\"UTC\"); the timezone is required. A
                    proto3 JSON serializer should always use UTC (as indicated by
                    \"Z\") when printing the Timestamp type and a proto3 JSON parser
                    should be able to accept both UTC and other timezones (as indicated
                    by an offset). \n For example, \"2017-01-15T01:30:15.01Z\" encodes
                    15.01 seconds past 01:30 UTC on January 15, 2017. \n In JavaScript,
                    one can convert a Date object to this format using the standard
                    [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString]
                    method. In Python, a standard `datetime.datetime` object can be
                    converted to this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)
                    with the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in
                    Java, one can use the Joda Time's [`ISODateTimeFormat.dateTime()`](
                    http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime--
                    ) to obtain a formatter capable of generating timestamps in this
                    format."
                  properties:
                    nanos:
                      description: Non-negative fractions of a second at nanosecond
                        resolution. Negative second values with fractions must still
                        have non-negative nanos values that count forward in time.
                        Must be from 0 to 999,999,999 inclusive.
                      format: int32
                      type: integer
                    seconds:
                      description: Represents seconds of UTC time since Unix epoch
                        1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                        9999-12-31T23:59:59Z inclusive.
                      format: int64
                      type: integer
                  type: object
              type: object
            deploymentLink:
              type: string
            extensions:
              items:
                type: string
              type: array
            health:
              format: int32
              type: integer
            metadata:
              properties:
                cloudProvider:
                  format: int32
                  type: integer
                clusterCPU:
                  description: ResourceAllocation defines the resource utilisation
                    and availability.
                  properties:
                    allocatable:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Allocatable is the quantity of compute resources
                        that can be allocated by the user excluding reserved resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    allocatedPercentage:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Represents allocated percentage.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    capacity:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Capacity is the total quantity of compute resources
                        available including reserved resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    requests:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Requested is the requested quantity of compute
                        resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    units:
                      description: Units is the unit on which resource can be measured
                        e.g. mb, millicores etc.
                      type: string
                  required:
                  - allocatable
                  - allocatedPercentage
                  - requests
                  - units
                  type: object
                clusterMemory:
                  description: ResourceAllocation defines the resource utilisation
                    and availability.
                  properties:
                    allocatable:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Allocatable is the quantity of compute resources
                        that can be allocated by the user excluding reserved resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    allocatedPercentage:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Represents allocated percentage.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    capacity:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Capacity is the total quantity of compute resources
                        available including reserved resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    requests:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Requested is the requested quantity of compute
                        resources.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    units:
                      description: Units is the unit on which resource can be measured
                        e.g. mb, millicores etc.
                      type: string
                  required:
                  - allocatable
                  - allocatedPercentage
                  - requests
                  - units
                  type: object
                kubeServerVersion:
                  type: string
                kubernetesProvider:
                  properties:
                    type:
                      format: int32
                      type: integer
                    version:
                      type: string
                  type: object
                lastUpdate:
                  description: "A Timestamp represents a point in time independent
                    of any time zone or calendar, represented as seconds and fractions
                    of seconds at nanosecond resolution in UTC Epoch time. It is encoded
                    using the Proleptic Gregorian Calendar which extends the Gregorian
                    calendar backwards to year one. It is encoded assuming all minutes
                    are 60 seconds long, i.e. leap seconds are \"smeared\" so that
                    no leap second table is needed for interpretation. Range is from
                    0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting
                    to that range, we ensure that we can convert to and from  RFC
                    3339 date strings. See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).
                    \n # Examples \n Example 1: Compute Timestamp from POSIX `time()`.
                    \n     Timestamp timestamp;     timestamp.set_seconds(time(NULL));
                    \    timestamp.set_nanos(0); \n Example 2: Compute Timestamp from
                    POSIX `gettimeofday()`. \n     struct timeval tv;     gettimeofday(&tv,
                    NULL); \n     Timestamp timestamp;     timestamp.set_seconds(tv.tv_sec);
                    \    timestamp.set_nanos(tv.tv_usec * 1000); \n Example 3: Compute
                    Timestamp from Win32 `GetSystemTimeAsFileTime()`. \n     FILETIME
                    ft;     GetSystemTimeAsFileTime(&ft);     UINT64 ticks = (((UINT64)ft.dwHighDateTime)
                    << 32) | ft.dwLowDateTime; \n     // A Windows tick is 100 nanoseconds.
                    Windows epoch 1601-01-01T00:00:00Z     // is 11644473600 seconds
                    before Unix epoch 1970-01-01T00:00:00Z.     Timestamp timestamp;
                    \    timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
                    \    timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));
                    \n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.
                    \n     long millis = System.currentTimeMillis(); \n     Timestamp
                    timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)         .setNanos((int)
                    ((millis % 1000) * 1000000)).build(); \n Example 5: Compute Timestamp
                    from current time in Python. \n     timestamp = Timestamp()     timestamp.GetCurrentTime()
                    \n # JSON Mapping \n In JSON format, the Timestamp type is encoded
                    as a string in the [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)
                    format. That is, the format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"
                    where {year} is always expressed using four digits while {month},
                    {day}, {hour}, {min}, and {sec} are zero-padded to two digits
                    each. The fractional seconds, which can go up to 9 digits (i.e.
                    up to 1 nanosecond resolution), are optional. The \"Z\" suffix
                    indicates the timezone (\"UTC\"); the timezone is required. A
                    proto3 JSON serializer should always use UTC (as indicated by
                    \"Z\") when printing the Timestamp type and a proto3 JSON parser
                    should be able to accept both UTC and other timezones (as indicated
                    by an offset). \n For example, \"2017-01-15T01:30:15.01Z\" encodes
                    15.01 seconds past 01:30 UTC on January 15, 2017. \n In JavaScript,
                    one can convert a Date object to this format using the standard
                    [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString]
                    method. In Python, a standard `datetime.datetime` object can be
                    converted to this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)
                    with the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in
                    Java, one can use the Joda Time's [`ISODateTimeFormat.dateTime()`](
                    http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime--
                    ) to obtain a formatter capable of generating timestamps in this
                    format."
                  properties:
                    nanos:
                      description: Non-negative fractions of a second at nanosecond
                        resolution. Negative second values with fractions must still
                        have non-negative nanos values that count forward in time.
                        Must be from 0 to 999,999,999 inclusive.
                      format: int32
                      type: integer
                    seconds:
                      description: Represents seconds of UTC time since Unix epoch
                        1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                        9999-12-31T23:59:59Z inclusive.
                      format: int64
                      type: integer
                  type: object
                masterNodeCount:
                  format: int64
                  type: integer
                namespacesCount:
                  format: int64
                  type: integer
                physicalMemory:
                  format: int64
                  type: integer
                podCount:
                  format: int64
                  type: integer
                region:
                  type: string
                vcpuCount:
                  format: int64
                  type: integer
                workerNodeCount:
                  format: int64
                  type: integer
              type: object
            status:
              format: int32
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    tmc.cloud.vmware.com/do-not-delete: "true"
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extensionconfigs.intents.tmc.cloud.vmware.com
spec:
  group: intents.tmc.cloud.vmware.com
  names:
    kind: ExtensionConfig
    plural: extensionconfigs
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            configMaps:
              description: ConfigMaps are the configMaps of the extension
              items:
                type: object
              type: array
          type: object
        status:
          properties:
            state:
              description: State indicates the state of the ExtensionConfig
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
    tmc.cloud.vmware.com/do-not-delete: "true"
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    app: extension-manager
    controller-tools.k8s.io: "1.0"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extensionintegrations.clusters.tmc.cloud.vmware.com
spec:
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: ExtensionIntegration
    listKind: ExtensionIntegrationList
    plural: extensionintegrations
    singular: extensionintegration
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ExtensionIntegration is the Schema for the extensionintegrations
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExtensionIntegrationSpec defines the desired state of ExtensionIntegration
          properties:
            extensionHealth:
              description: Health of the Extension Workload that is managing the underlying
                Application
              format: int32
              type: integer
            extensionState:
              description: Status of the Extension Workload that is managing the underlying
                Application
              format: int32
              type: integer
          type: object
        status:
          description: ExtensionIntegrationStatus defines the observed state of ExtensionIntegration
          properties:
            applicationConditions:
              description: Conditions of the Extension that is integrated with TMC
              items:
                description: Conditions captures readiness and health conditions for
                  an underlying Application mapping to an extension. Collectively
                  they capture the set of conditions that define the state and health
                  of application.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  severity:
                    description: Severity with which to treat failures of this type
                      of condition. When this is not specified, it defaults to Error.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                type: object
              type: array
            applicationVersion:
              description: Version of the WorkLoad Managed by the Operator TMC
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200617211605-651903477185
    tmc.cloud.vmware.com/do-not-delete: "true"
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extensionresourceowners.clusters.tmc.cloud.vmware.com
spec:
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: ExtensionResourceOwner
    listKind: ExtensionResourceOwnerList
    plural: extensionresourceowners
    singular: extensionresourceowner
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: ExtensionResourceOwner is the Schema for the extensionresourceowners
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExtensionResourceOwnerSpec defines the desired state of ExtensionResourceOwner
          type: object
        status:
          description: ExtensionResourceOwnerStatus defines the observed state of
            ExtensionResourceOwner
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200617211605-651903477185
    tmc.cloud.vmware.com/do-not-delete: "true"
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extensions.clusters.tmc.cloud.vmware.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: State
    type: integer
  - JSONPath: .status.health
    name: Health
    type: integer
  - JSONPath: .status.version
    name: Version
    type: string
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: Extension
    listKind: ExtensionList
    plural: extensions
    singular: extension
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Extension is the Schema for the extensions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ExtensionSpec defines the desired state of Extension
          properties:
            deploymentStrategy:
              description: Deployment strategy of an extension.
              properties:
                extensionLifecycleOwner:
                  description: Component Owning Deployment Strategy of the Extension.
                    In case this field is empty it is assumed that Owner of Deployment
                    Strategy is Extension Manager
                  type: string
                overlapTimePeriod:
                  description: Time-Period within which an extension maybe rolled-back
                    to previous version in case the extension becomes unhealthy after
                    the new version is updated successfully. After this time-period
                    elapses, Extensions will not be rolled back to previous versions
                    if they become unhealthy. If the value is zero this field will
                    not be used during Extension Lifecycle Management.
                  format: int64
                  type: integer
                processingTimeout:
                  description: Timeout Value for Processing(Creating/Updating/Deleting/RollingBack)
                    an Extension.
                  format: int64
                  type: integer
                type:
                  description: Type of deployment for extension resource.
                  type: string
              required:
              - type
              type: object
            description:
              type: string
            imageRegistry:
              description: Image registry where the extension images resides.
              type: string
            name:
              type: string
            objects:
              description: Raw JSON/YAML of extension  equivalent to kubernetes 'Unstructured'
                type.
              type: string
            version:
              type: string
          required:
          - deploymentStrategy
          - name
          - objects
          - version
          type: object
        status:
          description: ExtensionStatus defines the observed state of Extension
          properties:
            applicationStatus:
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this
                          type of condition. When this is not specified, it defaults
                          to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                version:
                  type: string
              required:
              - version
              type: object
            health:
              format: int32
              type: integer
            previousVersion:
              type: string
            state:
              format: int32
              type: integer
            status:
              format: int32
              type: integer
            version:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-manager
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extension-manager
  namespace: 'vmware-system-tmc'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    app: extension-manager
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extension-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    app: extension-manager
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extension-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: extension-manager-role
subjects:
- kind: ServiceAccount
  name: extension-manager
  namespace: 'vmware-system-tmc'
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-manager
    control-plane: extension-manager
    controller-tools.k8s.io: "1.0"
    tmc-extension: "true"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extension-manager-service
  namespace: 'vmware-system-tmc'
spec:
  ports:
  - port: 443
  selector:
    control-plane: extension-manager
    controller-tools.k8s.io: "1.0"
    tmc-extension: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-manager
    control-plane: extension-manager
    controller-tools.k8s.io: "1.0"
    tmc-extension: "true"
    tmc-extension-name: extension-manager
    tmc.cloud.vmware.com/managed: "true"
  name: extension-manager
  namespace: 'vmware-system-tmc'
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      control-plane: extension-manager
      controller-tools.k8s.io: "1.0"
      tmc-extension: "true"
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        control-plane: extension-manager
        controller-tools.k8s.io: "1.0"
        tmc-extension: "true"
        tmc-extension-name: extension-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: 'extensions.aws-usw2.tmc.cloud.vmware.com/extensions/extension-manager/extension-manager@sha256:e6c7e0fa5481b220a457cebe29924f4abfb4ed711e0d48be02a6f665ee1d7c9b'
        imagePullPolicy: Always
        name: extension-manager
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsGroup: 1000
          runAsUser: 10000
      serviceAccountName: extension-manager
      tolerations:
      - operator: Exists

---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: extension-updater-serviceaccount
  namespace: 'vmware-system-tmc'
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default,runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: vmware-system-tmc-agent-restricted
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - ALL
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: extension-updater-clusterrole
rules:
- apiGroups:
  - security.openshift.io
  resourceNames:
  - nonroot
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - clusters.tmc.cloud.vmware.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - update
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: vmware-system-tmc-psp-agent-restricted
rules:
- apiGroups:
  - policy
  resourceNames:
  - vmware-system-tmc-agent-restricted
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: extension-updater-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: extension-updater-clusterrole
subjects:
- kind: ServiceAccount
  name: extension-updater-serviceaccount
  namespace: 'vmware-system-tmc'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: vmware-system-tmc-psp-agent-restricted
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vmware-system-tmc-psp-agent-restricted
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:vmware-system-tmc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: extension-updater
  namespace: 'vmware-system-tmc'
spec:
  ports:
  - name: validate-grpc
    port: 9988
    protocol: TCP
    targetPort: 9988
  selector:
    app: extension-updater
    component: extension-updater
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: extension-updater
    tmc-extension-name: extension-updater
    tmc.cloud.vmware.com/managed: "true"
  name: extension-updater
  namespace: 'vmware-system-tmc'
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: extension-updater
      component: extension-updater
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        app: extension-updater
        component: extension-updater
        tmc-extension-name: extension-updater
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --server=$(TMC_HOST):443
        - --server-name=$(TMC_HOST)
        - --tmc-ca=/etc/tmc/ca.crt
        - --cluster-id=$(CLUSTER_RESOURCE_ID)
        - --cluster-name=$(CLUSTER_NAME)
        - --connect-timeout=100s
        - --poll-interval=5m
        - --poll-jitter=0.3
        - --agent-heart-beat-interval=90s
        - --validation-grpc-port=9988
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TMC_HOST
          valueFrom:
            configMapKeyRef:
              key: tmc_host
              name: stack-config
        - name: CLUSTER_RESOURCE_ID
          valueFrom:
            configMapKeyRef:
              key: cluster_rid
              name: stack-config
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster_name
              name: stack-config
        image: 'extensions.aws-usw2.tmc.cloud.vmware.com/extensions/extension-updater/extension-updater@sha256:b90dcfe4ca0e72d51f8f879570fc7c749863b746b027508b33ee1f3c74b941be'
        imagePullPolicy: Always
        name: extension-updater
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        securityContext:
          runAsGroup: 1000
          runAsUser: 10000
        volumeMounts:
        - mountPath: /etc/tmc
          name: tmc-root-ca
          readOnly: true
      serviceAccountName: extension-updater-serviceaccount
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          items:
          - key: tls.crt
            path: ca.crt
          name: stack-config
        name: tmc-root-ca

---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: agent-updater
    tmc-extension-name: agent-updater
    tmc.cloud.vmware.com/managed: "true"
  name: agent-updater
  namespace: 'vmware-system-tmc'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    app: agent-updater
    tmc-extension-name: agent-updater
    tmc.cloud.vmware.com/managed: "true"
  name: agent-updater-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  creationTimestamp: null
  labels:
    app: agent-updater
    tmc-extension-name: agent-updater
    tmc.cloud.vmware.com/managed: "true"
  name: agent-updater-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-updater-role
subjects:
- kind: ServiceAccount
  name: agent-updater
  namespace: 'vmware-system-tmc'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: agent-updater
    component: agent-updater
    tmc-extension: "true"
    tmc-extension-name: agent-updater
    tmc.cloud.vmware.com/managed: "true"
  name: agent-updater
  namespace: 'vmware-system-tmc'
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      component: agent-updater
      tmc-extension: "true"
      tmc-extension-name: agent-updater
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        app: agent-updater
        component: agent-updater
        tmc-extension: "true"
        tmc-extension-name: agent-updater
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: 'extensions.aws-usw2.tmc.cloud.vmware.com/extensions/agent-updater/agent-updater@sha256:a97ab78f272f39099d266a5fbcbd6f8f79ffa8194e27a261e8109e4997a75a54'
        imagePullPolicy: Always
        name: agent-updater
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          runAsGroup: 1000
          runAsUser: 10000
      serviceAccountName: agent-updater
      tolerations:
      - operator: Exists
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: agent-updater
    component: agentupdater-workload
    tmc-extension: "true"
    tmc-extension-name: agent-updater
    tmc.cloud.vmware.com/managed: "true"
  name: agentupdater-workload
  namespace: 'vmware-system-tmc'
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        component: agentupdater-workload
        tmc-extension-name: agent-updater
        tmc.cloud.vmware.com/managed: "true"
    spec:
      template:
        metadata:
          labels:
            tmc-extension-name: agent-updater
            tmc.cloud.vmware.com/managed: "true"
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
                - matchExpressions:
                  - key: beta.kubernetes.io/os
                    operator: In
                    values:
                    - linux
          containers:
          - command:
            - /usr/local/bin/agentupdaterworkload
            env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            image: 'extensions.aws-usw2.tmc.cloud.vmware.com/extensions/agent-updater/agentupdater-workload@sha256:c809986ec2206981afeec78ef996a636259fa2e3736e2e957120352b6ac00cce'
            imagePullPolicy: IfNotPresent
            name: agentupdater-workload
            ports:
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
            resources:
              limits:
                cpu: 100m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
            securityContext:
              runAsGroup: 1000
              runAsUser: 10000
          restartPolicy: Never
          serviceAccountName: agent-updater
          tolerations:
          - operator: Exists
  schedule: '*/1 * * * *'
  startingDeadlineSeconds: 180

---